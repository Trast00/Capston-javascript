"use strict";(self.webpackChunkcapston_javascript=self.webpackChunkcapston_javascript||[]).push([[179],{426:(n,t,e)=>{e.d(t,{Z:()=>s});var r=e(537),i=e.n(r),a=e(645),o=e.n(a)()(i());o.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap);"]),o.push([n.id,'* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  font-family: "Popins", sans-serif;\r\n}\r\n\r\n.flex-center {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.header {\r\n  width: 100%;\r\n}\r\n\r\n.nav-bar {\r\n  width: 90%;\r\n  padding: 20px 50px;\r\n}\r\n\r\n.nav-bar ul {\r\n  justify-content: space-evenly;\r\n  width: 100%;\r\n}\r\n\r\n.nav-bar ul li {\r\n  list-style-type: none;\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n}\r\n\r\n.nav-bar img {\r\n  width: 150px;\r\n}\r\n\r\n.nav-bar ul li:nth-child(2) {\r\n  text-decoration: underline;\r\n}\r\n\r\n.main-container {\r\n  min-height: 600px;\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n}\r\n\r\n.list-movies {\r\n  width: 90%;\r\n  list-style: none;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n}\r\n\r\n.movie {\r\n  width: 266px;\r\n  height: 400px;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 8px;\r\n  border: 1px solid #d3d3d3;\r\n  border-radius: 4px;\r\n}\r\n\r\n.movie img {\r\n  width: 250px;\r\n  height: 250px;\r\n}\r\n\r\n.movie-content {\r\n  flex-wrap: wrap;\r\n  justify-content: flex-start;\r\n}\r\n.movie-content .likes {\r\n  margin-left: 8px;\r\n}\r\n.movie-content .likes i {\r\n  margin-right: 8px;\r\n}\r\n\r\n#btn-show-comment {\r\n  width: 100%;\r\n  height: 40px;\r\n  justify-self: flex-end;\r\n  margin-top: 12px;\r\n}\r\n\r\n.foot {\r\n  justify-content: flex-start;\r\n  padding: 30px;\r\n  border-top: 2px solid #000;\r\n}\r\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;EACtB,iCAAiC;AACnC;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,UAAU;EACV,kBAAkB;AACpB;;AAEA;EACE,6BAA6B;EAC7B,WAAW;AACb;;AAEA;EACE,qBAAqB;EACrB,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,iBAAiB;EACjB,iBAAiB;EACjB,oBAAoB;AACtB;;AAEA;EACE,UAAU;EACV,gBAAgB;EAChB,eAAe;EACf,6BAA6B;AAC/B;;AAEA;EACE,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,8BAA8B;EAC9B,YAAY;EACZ,yBAAyB;EACzB,kBAAkB;AACpB;;AAEA;EACE,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,eAAe;EACf,2BAA2B;AAC7B;AACA;EACE,gBAAgB;AAClB;AACA;EACE,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,sBAAsB;EACtB,gBAAgB;AAClB;;AAEA;EACE,2BAA2B;EAC3B,aAAa;EACb,0BAA0B;AAC5B",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap');\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n  font-family: \"Popins\", sans-serif;\r\n}\r\n\r\n.flex-center {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.header {\r\n  width: 100%;\r\n}\r\n\r\n.nav-bar {\r\n  width: 90%;\r\n  padding: 20px 50px;\r\n}\r\n\r\n.nav-bar ul {\r\n  justify-content: space-evenly;\r\n  width: 100%;\r\n}\r\n\r\n.nav-bar ul li {\r\n  list-style-type: none;\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n}\r\n\r\n.nav-bar img {\r\n  width: 150px;\r\n}\r\n\r\n.nav-bar ul li:nth-child(2) {\r\n  text-decoration: underline;\r\n}\r\n\r\n.main-container {\r\n  min-height: 600px;\r\n  padding-top: 20px;\r\n  padding-bottom: 20px;\r\n}\r\n\r\n.list-movies {\r\n  width: 90%;\r\n  list-style: none;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n}\r\n\r\n.movie {\r\n  width: 266px;\r\n  height: 400px;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 8px;\r\n  border: 1px solid #d3d3d3;\r\n  border-radius: 4px;\r\n}\r\n\r\n.movie img {\r\n  width: 250px;\r\n  height: 250px;\r\n}\r\n\r\n.movie-content {\r\n  flex-wrap: wrap;\r\n  justify-content: flex-start;\r\n}\r\n.movie-content .likes {\r\n  margin-left: 8px;\r\n}\r\n.movie-content .likes i {\r\n  margin-right: 8px;\r\n}\r\n\r\n#btn-show-comment {\r\n  width: 100%;\r\n  height: 40px;\r\n  justify-self: flex-end;\r\n  margin-top: 12px;\r\n}\r\n\r\n.foot {\r\n  justify-content: flex-start;\r\n  padding: 30px;\r\n  border-top: 2px solid #000;\r\n}\r\n"],sourceRoot:""}]);const s=o},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",r=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),r&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),r&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,r,i,a){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(o[A]=!0)}for(var c=0;c<n.length;c++){var p=[].concat(n[c]);r&&o[p[0]]||(void 0!==a&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=a),e&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=e):p[2]=e),i&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=i):p[4]="".concat(i)),t.push(p))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(i," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,r=0;r<t.length;r++)if(t[r].identifier===n){e=r;break}return e}function r(n,r){for(var a={},o=[],s=0;s<n.length;s++){var A=n[s],c=r.base?A[0]+r.base:A[0],p=a[c]||0,d="".concat(c," ").concat(p);a[c]=p+1;var l=e(d),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==l)t[l].references++,t[l].updater(u);else{var m=i(u,r);r.byIndex=s,t.splice(s,0,{identifier:d,updater:m,references:1})}o.push(d)}return o}function i(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,i){var a=r(n=n||[],i=i||{});return function(n){n=n||[];for(var o=0;o<a.length;o++){var s=e(a[o]);t[s].references--}for(var A=r(n,i),c=0;c<a.length;c++){var p=e(a[c]);0===t[p].references&&(t[p].updater(),t.splice(p,1))}a=A}}},569:n=>{var t={};n.exports=function(n,e){var r=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var i=void 0!==e.layer;i&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,i&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}},550:(n,t,e)=>{var r=e(379),i=e.n(r),a=e(795),o=e.n(a),s=e(569),A=e.n(s),c=e(565),p=e.n(c),d=e(216),l=e.n(d),u=e(589),m=e.n(u),f=e(426),h={};h.styleTagTransform=m(),h.setAttributes=p(),h.insert=A().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=l(),i()(f.Z,h),f.Z&&f.Z.locals&&f.Z.locals,document.getElementById("list-movies");const E=new class{constructor(){this.list=[],this.urlApi="https://api.tvmaze.com/shows/",this.idLastDisplayed=0}display=n=>{const t=this.list.slice(this.idLastDisplayed,this.idLastDisplayed+n);this.idLastDisplayed+=n,console.log(this.idLastDisplayed),t.forEach((n=>{const t=document.createElement("li");t.classList.add("flex-center","movie"),t.id=`movie-${n.id}`;const e=document.createElement("div"),r=document.createElement("img");r.src=n.image.medium,r.alt=`Movies ${n.name} image`;const i=document.createElement("div");i.classList.add("flex-center","movie-content");const a=document.createElement("h3");a.textContent=n.name;const o=document.createElement("div");o.classList.add("flex-center","likes");const s=document.createElement("i");s.classList.add("fa-reguar","fa-heart");const A=document.createElement("p");A.textContent="3 Like";const c=document.createElement("button");c.classList.add("btn-show-comment"),c.textContent="Comments",o.append(s,A),i.append(a,o),e.append(r,i),t.append(e,c),document.getElementById("list-movies").append(t)}))};getList=async()=>{const n=await fetch("https://api.tvmaze.com/shows");await n.json().then((n=>{this.list=n,console.log("list movies getted: ",this.list)}))}};window.addEventListener("load",(async()=>{await E.getList(),E.display(10)}))}},n=>{n(n.s=550)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,